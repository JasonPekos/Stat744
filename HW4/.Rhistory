#also
#https://stackoverflow.com/a/25962717
#user BAPTISTE
#common legend
#https://stackoverflow.com/a/13650878
#credit to ROLAND
#credit to https://community.rstudio.com/t/adding-main-title-using-ggarrange/85629
#user: nirgrahamuk
text <- "example title"
# Create a text grob
tgrob <- text_grob(text,size = 20)
plot_0 <- as_ggplot(tgrob) + theme(plot.margin = margin(0,3,0,0, "cm"))
#ggarrange(plot_0,NULL,plot_1, plot_2, ncol = 2,nrow = 2,heights = c(1,5))
titleVector = list( NULL, plot_0, NULL)
nullVec = list(NULL)
plots = append(titleVector, plots)
plots = append(plots, nullVec)
main = do.call(ggarrange, c(plot_list = plots, ncol = 3, nrows = 3, common.legend = TRUE, legend="bottom"))
main
ggexport(main)
plots  = list()
library(ggpubr)
#searching for something totally seperate, once I commited to this path already, I found this question
#https://stackoverflow.com/questions/9315611/grid-of-multiple-ggplot2-plots-which-have-been-made-in-a-for-loop
#which made my life here a lot easier. credit to this person (Justin).
for (Disease in unique(pull(dfFULL,1))) {
plots[[Disease]] = ggplot(data = filter(dfFULL,  Diseases == Disease), aes(x = 0, y = Deaths, color = City)) +
geom_errorbar(aes(ymin = Deaths - CI_Dev, ymax = Deaths + CI_Dev ),
position = position_dodge(0.05),
width = 0.3,
show.legend = TRUE) +
geom_point(position=position_dodge(0.05),
show.legend = TRUE) +
theme(aspect.ratio=18/9) +
xlim(-1,1) +
labs(x = Disease) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank()
)
}
#more help
#https://stackoverflow.com/a/49767811
#from user MBORG
#also
#https://stackoverflow.com/a/25962717
#user BAPTISTE
#common legend
#https://stackoverflow.com/a/13650878
#credit to ROLAND
#credit to https://community.rstudio.com/t/adding-main-title-using-ggarrange/85629
#user: nirgrahamuk
text <- "example title"
# Create a text grob
tgrob <- text_grob(text,size = 20)
plot_0 <- as_ggplot(tgrob) + theme(plot.margin = margin(0,3,0,0, "cm"))
#ggarrange(plot_0,NULL,plot_1, plot_2, ncol = 2,nrow = 2,heights = c(1,5))
titleVector = list( NULL, plot_0, NULL)
nullVec = list(NULL)
plots = append(titleVector, plots)
plots = append(plots, nullVec)
main = do.call(ggarrange, c(plot_list = plots, ncol = 3, nrows = 3, common.legend = TRUE, legend="bottom"))
main
ggexport(main)
plots  = list()
library(ggpubr)
#searching for something totally seperate, once I commited to this path already, I found this question
#https://stackoverflow.com/questions/9315611/grid-of-multiple-ggplot2-plots-which-have-been-made-in-a-for-loop
#which made my life here a lot easier. credit to this person (Justin).
for (Disease in unique(pull(dfFULL,1))) {
plots[[Disease]] = ggplot(data = filter(dfFULL,  Diseases == Disease), aes(x = 0, y = Deaths, color = City)) +
geom_errorbar(aes(ymin = Deaths - CI_Dev, ymax = Deaths + CI_Dev ),
position = position_dodge(0.05),
width = 0.3,
show.legend = TRUE) +
geom_point(position=position_dodge(0.05),
show.legend = TRUE) +
theme(aspect.ratio=18/9) +
xlim(-1,1) +
labs(x = Disease) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank()
)
}
#more help
#https://stackoverflow.com/a/49767811
#from user MBORG
#also
#https://stackoverflow.com/a/25962717
#user BAPTISTE
#common legend
#https://stackoverflow.com/a/13650878
#credit to ROLAND
#credit to https://community.rstudio.com/t/adding-main-title-using-ggarrange/85629
#user: nirgrahamuk
text <- "example title"
# Create a text grob
tgrob <- text_grob(text,size = 20)
plot_0 <- as_ggplot(tgrob) + theme(plot.margin = margin(0,3,0,0, "cm"))
#ggarrange(plot_0,NULL,plot_1, plot_2, ncol = 2,nrow = 2,heights = c(1,5))
titleVector = list( NULL, plot_0, NULL)
nullVec = list(NULL)
plots = append(titleVector, plots)
plots = append(plots, nullVec)
main = do.call(ggarrange, c(plot_list = plots, ncol = 3, nrows = 3, common.legend = TRUE, legend="bottom"))
main
ggexport(main)
plots  = list()
library(ggpubr)
#searching for something totally seperate, once I commited to this path already, I found this question
#https://stackoverflow.com/questions/9315611/grid-of-multiple-ggplot2-plots-which-have-been-made-in-a-for-loop
#which made my life here a lot easier. credit to this person (Justin).
for (Disease in unique(pull(dfFULL,1))) {
plots[[Disease]] = ggplot(data = filter(dfFULL,  Diseases == Disease), aes(x = 0, y = Deaths, color = City)) +
geom_errorbar(aes(ymin = Deaths - CI_Dev, ymax = Deaths + CI_Dev ),
position = position_dodge(0.05),
width = 0.3,
show.legend = TRUE) +
geom_point(position=position_dodge(0.05),
show.legend = TRUE) +
theme(aspect.ratio=6/3) +
xlim(-1,1) +
labs(x = Disease) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank()
)
}
#more help
#https://stackoverflow.com/a/49767811
#from user MBORG
#also
#https://stackoverflow.com/a/25962717
#user BAPTISTE
#common legend
#https://stackoverflow.com/a/13650878
#credit to ROLAND
#credit to https://community.rstudio.com/t/adding-main-title-using-ggarrange/85629
#user: nirgrahamuk
text <- "example title"
# Create a text grob
tgrob <- text_grob(text,size = 20)
plot_0 <- as_ggplot(tgrob) + theme(plot.margin = margin(0,3,0,0, "cm"))
#ggarrange(plot_0,NULL,plot_1, plot_2, ncol = 2,nrow = 2,heights = c(1,5))
titleVector = list( NULL, plot_0, NULL)
nullVec = list(NULL)
plots = append(titleVector, plots)
plots = append(plots, nullVec)
main = do.call(ggarrange, c(plot_list = plots, ncol = 3, nrows = 3, common.legend = TRUE, legend="bottom"))
main
ggexport(main)
title = "Estimated Deaths in"
HW3Plotter = function(df){
ggplot(df, aes (x = Diseases, y = pull(df, 2))) +
geom_point() +
geom_errorbar(aes(ymin = pull(df, 2) - pull(df, -1),
ymax = pull(df, 2) + pull(df, -1)),
width  = 0.4)  +
theme_hc() +
scale_y_continuous(n.breaks = 8, limits  = c(-3000,10000)) +
ggtitle(paste(title, pull(df, -2))) +
xlab("Cause of Death")    +
ylab("Deaths with 95% CI")
}
HW3Plotter(dfNY)
cat("\\newpage");
HW3Plotter(dfII)
title = "Estimated Deaths in"
HW3Plotter = function(df){
ggplot(df, aes (x = Diseases, y = pull(df, 2))) +
geom_point() +
geom_errorbar(aes(ymin = pull(df, 2) - pull(df, -1),
ymax = pull(df, 2) + pull(df, -1)),
width  = 0.4)  +
theme_hc() +
scale_y_continuous(n.breaks = 8, limits  = c(-3000,10000)) +
ggtitle(paste(title, pull(df, -2))) +
xlab("Cause of Death")    +
ylab("Deaths with 95% CI")
}
HW3Plotter(dfNY)
cat("\\newpage");
HW3Plotter(dfII)
plots  = list()
library(ggpubr)
#searching for something totally seperate, once I commited to this path already, I found this question
#https://stackoverflow.com/questions/9315611/grid-of-multiple-ggplot2-plots-which-have-been-made-in-a-for-loop
#which made my life here a lot easier. credit to this person (Justin).
for (Disease in unique(pull(dfFULL,1))) {
plots[[Disease]] = ggplot(data = filter(dfFULL,  Diseases == Disease), aes(x = 0, y = Deaths, color = City)) +
geom_errorbar(aes(ymin = Deaths - CI_Dev, ymax = Deaths + CI_Dev ),
position = position_dodge(0.05),
width = 0.3,
show.legend = TRUE) +
geom_point(position=position_dodge(0.05),
show.legend = TRUE) +
theme(aspect.ratio=6/3) +
xlim(-1,1) +
labs(x = Disease) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank()
)
}
#more help
#https://stackoverflow.com/a/49767811
#from user MBORG
#also
#https://stackoverflow.com/a/25962717
#user BAPTISTE
#common legend
#https://stackoverflow.com/a/13650878
#credit to ROLAND
#credit to https://community.rstudio.com/t/adding-main-title-using-ggarrange/85629
#user: nirgrahamuk
text <- "example title"
# Create a text grob
tgrob <- text_grob(text,size = 20)
plot_0 <- as_ggplot(tgrob) + theme(plot.margin = margin(0,3,0,0, "cm"))
#ggarrange(plot_0,NULL,plot_1, plot_2, ncol = 2,nrow = 2,heights = c(1,5))
titleVector = list( NULL, plot_0, NULL, NULL, NULL)
nullVec = list(NULL)
#didn't end up using the title because it just simply can't work ...
#plots = append(titleVector, plots)
plots = append(plots, nullVec)
main = do.call(ggarrange, c(plot_list = plots, ncol = 5, nrows = 2, common.legend = TRUE, legend="bottom"))
main
plots  = list()
library(ggpubr)
#searching for something totally seperate, once I commited to this path already, I found this question
#https://stackoverflow.com/questions/9315611/grid-of-multiple-ggplot2-plots-which-have-been-made-in-a-for-loop
#which made my life here a lot easier. credit to this person (Justin).
for (Disease in unique(pull(dfFULL,1))) {
plots[[Disease]] = ggplot(data = filter(dfFULL,  Diseases == Disease), aes(x = 0, y = Deaths, color = City)) +
geom_errorbar(aes(ymin = Deaths - CI_Dev, ymax = Deaths + CI_Dev ),
position = position_dodge(0.05),
width = 0.3,
show.legend = TRUE) +
geom_point(position=position_dodge(0.05),
show.legend = TRUE) +
theme(aspect.ratio=6/3) +
xlim(-1,1) +
labs(x = Disease) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank()
)
}
#more help
#https://stackoverflow.com/a/49767811
#from user MBORG
#also
#https://stackoverflow.com/a/25962717
#user BAPTISTE
#common legend
#https://stackoverflow.com/a/13650878
#credit to ROLAND
#credit to https://community.rstudio.com/t/adding-main-title-using-ggarrange/85629
#user: nirgrahamuk
text <- "example title"
# Create a text grob
tgrob <- text_grob(text,size = 20)
plot_0 <- as_ggplot(tgrob) + theme(plot.margin = margin(0,3,0,0, "cm"))
#ggarrange(plot_0,NULL,plot_1, plot_2, ncol = 2,nrow = 2,heights = c(1,5))
titleVector = list( NULL, plot_0, NULL, NULL, NULL)
nullVec = list(NULL)
#didn't end up using the title because it just simply can't work ...
#plots = append(titleVector, plots)
plots = append(plots, nullVec)
main = do.call(ggarrange, c(plot_list = plots, ncol = 5, nrows = 2, common.legend = TRUE, legend="bottom"))
main
plot(0.000000,0.000000,0.049813,0.180997,0.120480,0.101029,0.440476,0.413549,0.615154,0.271181,0.399485,0.242442,0.078789,0.078789,0.362486,0.749343,0.914926,1.085199,1.102490)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
avg(draws)
mean(draws)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(JuliaCall)
eyam = c(3,4,1,3,1,3,1,1,0,0,1,0,1,1,2,0,1,2,0,1,2,
1,1,4,2,2,1,2,0,1,0,1,1,2,3,6,1,0,0,0,3,0,
1,3,4,0,1,3,5,4,2,6,6,3,0,3,4,1,1,2,1,2,8,
3,5,1,3,4,2,4,2,1,1,1,3,0,2,1,0,3,0,2,1,1,
2,0,0,2,1,3,1,0,0,2,0,0,0,0,1,0,1,1,1,3,0,
0,0,0,0,1,0,1,1,0,1,1,2,0,2,0,0,1,1,2,1,1,
0,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1);
ggplot(data = eyam)
tibble(eyam)
x = len(eyam)
x = length(eyam)
x = c(1:eyam)
x = c(1:length(eyam))
tibble(x, eyam)
#deaths in eyam
deaths = c(3,4,1,3,1,3,1,1,0,0,1,0,1,1,2,0,1,2,0,1,2,
1,1,4,2,2,1,2,0,1,0,1,1,2,3,6,1,0,0,0,3,0,
1,3,4,0,1,3,5,4,2,6,6,3,0,3,4,1,1,2,1,2,8,
3,5,1,3,4,2,4,2,1,1,1,3,0,2,1,0,3,0,2,1,1,
2,0,0,2,1,3,1,0,0,2,0,0,0,0,1,0,1,1,1,3,0,
0,0,0,0,1,0,1,1,0,1,1,2,0,2,0,0,1,1,2,1,1,
0,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1);
#deaths in eyam
deaths = c(3,4,1,3,1,3,1,1,0,0,1,0,1,1,2,0,1,2,0,1,2,
1,1,4,2,2,1,2,0,1,0,1,1,2,3,6,1,0,0,0,3,0,
1,3,4,0,1,3,5,4,2,6,6,3,0,3,4,1,1,2,1,2,8,
3,5,1,3,4,2,4,2,1,1,1,3,0,2,1,0,3,0,2,1,1,
2,0,0,2,1,3,1,0,0,2,0,0,0,0,1,0,1,1,1,3,0,
0,0,0,0,1,0,1,1,0,1,1,2,0,2,0,0,1,1,2,1,1,
0,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1);
day = c(1:length(eyam))
tibble(day, eyam)
ggplot(data = eyam)
tibble(day, eyam)
#deaths in eyam
deaths = c(3,4,1,3,1,3,1,1,0,0,1,0,1,1,2,0,1,2,0,1,2,
1,1,4,2,2,1,2,0,1,0,1,1,2,3,6,1,0,0,0,3,0,
1,3,4,0,1,3,5,4,2,6,6,3,0,3,4,1,1,2,1,2,8,
3,5,1,3,4,2,4,2,1,1,1,3,0,2,1,0,3,0,2,1,1,
2,0,0,2,1,3,1,0,0,2,0,0,0,0,1,0,1,1,1,3,0,
0,0,0,0,1,0,1,1,0,1,1,2,0,2,0,0,1,1,2,1,1,
0,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1);
day = c(1:length(deaths))
ggplot(data = deaths)
tibble(day, deaths)
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point()
Eyam = tibble(day, deaths)
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point()
library(ggthemes)
library(tidyverse)
library(ggthemes)
library(JuliaCall)
#deaths in eyam
deaths = c(3,4,1,3,1,3,1,1,0,0,1,0,1,1,2,0,1,2,0,1,2,
1,1,4,2,2,1,2,0,1,0,1,1,2,3,6,1,0,0,0,3,0,
1,3,4,0,1,3,5,4,2,6,6,3,0,3,4,1,1,2,1,2,8,
3,5,1,3,4,2,4,2,1,1,1,3,0,2,1,0,3,0,2,1,1,
2,0,0,2,1,3,1,0,0,2,0,0,0,0,1,0,1,1,1,3,0,
0,0,0,0,1,0,1,1,0,1,1,2,0,2,0,0,1,1,2,1,1,
0,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1);
day = c(1:length(deaths))
Eyam = tibble(day, deaths)
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point()
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths in Eyam, 1665"))
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths in Eyam, 1665")
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths in Eyam, 1665") +
theme_stata()
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata()
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth()
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.75)
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.7)
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.2)
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.4)
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.4) +
aes(colour="A"))
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.4) +
aes(colour="A")
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.4, aes(colour="A")) +
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.4, aes(colour="A"))
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.4, aes(colour="A"))
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.4, aes(colour="LOESS fit")) +
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.4, aes(colour="LOESS fit"))
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.4, aes(colour="LOESS fit"))
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.4, aes(colour ="LOESS fit")) +
scale_color_hue(labels = c("LOESS Smooth"))
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.4, aes(colour ="LOESS fit")) +
scale_color_hue(labels = c("LOESS Smooth"))
install.packages("BayesPlot")
install.packages("bayesplot")
read.csv("ModelOut.csv")
read.csv(file  = "ModelOut.csv")
read.csv(file = "ModelOut.csv")
pwd()
getwd()
setwd("/Users/work/Desktop/Stat744/HW4")
getwd()
read.csv(file = "ModelOut.csv")
read.csv(file = "ModelOut.csv")
library(tidyverse)
library(ggthemes)
library(JuliaCall)
#deaths in eyam
deaths = c(3,4,1,3,1,3,1,1,0,0,1,0,1,1,2,0,1,2,0,1,2,
1,1,4,2,2,1,2,0,1,0,1,1,2,3,6,1,0,0,0,3,0,
1,3,4,0,1,3,5,4,2,6,6,3,0,3,4,1,1,2,1,2,8,
3,5,1,3,4,2,4,2,1,1,1,3,0,2,1,0,3,0,2,1,1,
2,0,0,2,1,3,1,0,0,2,0,0,0,0,1,0,1,1,1,3,0,
0,0,0,0,1,0,1,1,0,1,1,2,0,2,0,0,1,1,2,1,1,
0,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1);
day = c(1:length(deaths))
Eyam = tibble(day, deaths)
ggplot(data = Eyam, aes(x = day, y = deaths))+
geom_point() +
ggtitle("Deaths per Day in Eyam, 1665") +
theme_stata() +
geom_smooth(span = 0.4, aes(colour ="LOESS fit")) +
scale_color_hue(labels = c("LOESS Smooth"))
library(bayesplot)
read.csv(file = "ModelOut.csv")
setwd("~/Desktop/Stat744/HW4")
read.csv(file = "ModelOut.csv")
read.csv(file = "ModelOut.csv")
read.csv(file = "ModelOut.csv")
ModelOut <- read_csv("ModelOut.csv")
library(bayesplot)
library(readr)
ModelOut <- read_csv("ModelOut.csv")
View(ModelOut)
